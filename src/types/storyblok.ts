// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from "storyblok";
export interface RichtextStoryblok {
  type: string;
  content?: RichtextStoryblok[];
  marks?: RichtextStoryblok[];
  attrs?: any;
  text?: string;
  [k: string]: any;
}

export interface AccordionStoryblok {
  title: string;
  content: RichtextStoryblok;
  component: "accordion";
  _uid: string;
  [k: string]: any;
}

export interface AccordionGroupStoryblok {
  items: AccordionStoryblok[];
  component: "accordionGroup";
  _uid: string;
  [k: string]: any;
}

export interface AssetStoryblok {
  alt?: string;
  copyright?: string;
  id: number;
  filename: string;
  name: string;
  title?: string;
  focus?: string;
  [k: string]: any;
}

export interface ArticleStoryblok {
  cover: AssetStoryblok;
  description: string;
  content: RichtextStoryblok;
  categories: (ISbStoryData<BlogCategoryStoryblok> | string)[];
  metaTitle: string;
  metaDescription: string;
  ogBadge: string;
  ogTitle: string;
  component: "article";
  _uid: string;
  [k: string]: any;
}

export interface BlogCategoryStoryblok {
  component: "blogCategory";
  _uid: string;
  [k: string]: any;
}

export type MultilinkStoryblok =
  | {
      id?: string;
      cached_url?: string;
      anchor?: string;
      linktype?: "story";
      target?: "_self" | "_blank";
      story?: {
        name: string;
        created_at?: string;
        published_at?: string;
        id: number;
        uuid: string;
        content?: {
          [k: string]: any;
        };
        slug: string;
        full_slug: string;
        sort_by_date?: null | string;
        position?: number;
        tag_list?: string[];
        is_startpage?: boolean;
        parent_id?: null | number;
        meta_data?: null | {
          [k: string]: any;
        };
        group_id?: string;
        first_published_at?: string;
        release_id?: null | number;
        lang?: string;
        path?: null | string;
        alternates?: any[];
        default_full_slug?: null | string;
        translated_slugs?: null | any[];
        [k: string]: any;
      };
      [k: string]: any;
    }
  | {
      url?: string;
      cached_url?: string;
      anchor?: string;
      linktype?: "asset" | "url";
      target?: "_self" | "_blank";
      [k: string]: any;
    }
  | {
      email?: string;
      linktype?: "email";
      target?: "_self" | "_blank";
      [k: string]: any;
    };

export interface ButtonStoryblok {
  title: string;
  link: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  style: "" | "blackFull" | "blackLink" | "blueFull" | "grayFull" | "whiteFull" | "whiteLink";
  isArrowShowed?: boolean;
  component: "button";
  _uid: string;
  [k: string]: any;
}

export interface ButtonGroupStoryblok {
  items: ButtonStoryblok[];
  component: "buttonGroup";
  _uid: string;
  [k: string]: any;
}

export interface CallToActionStoryblok {
  badge: string;
  title: string;
  content: string;
  buttons: ButtonStoryblok[];
  component: "callToAction";
  _uid: string;
  [k: string]: any;
}

export interface CodeBlockStoryblok {
  component: "codeBlock";
  _uid: string;
  [k: string]: any;
}

export interface DefinitionStoryblok {
  metaTitle: string;
  metaDescription: string;
  ogBadge: string;
  ogTitle: string;
  component: "definition";
  _uid: string;
  [k: string]: any;
}

export interface DefinitionHomeStoryblok {
  component: "definitionHome";
  _uid: string;
  [k: string]: any;
}

export interface FooterAgencyStoryblok {
  city: string;
  adressOne: string;
  adresseTwo?: string;
  component: "footerAgency";
  _uid: string;
  [k: string]: any;
}

export interface FooterLinkStoryblok {
  title: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "footerLink";
  _uid: string;
  [k: string]: any;
}

export interface FooterLinkGroupStoryblok {
  title: string;
  items: FooterLinkStoryblok[];
  component: "footerLinkGroup";
  _uid: string;
  [k: string]: any;
}

export interface GlobalStoryblok {
  footerAgencies: FooterAgencyStoryblok[];
  footerColumns: FooterLinkGroupStoryblok[];
  footerLinks: FooterLinkStoryblok[];
  logoDark: AssetStoryblok;
  logoLight: AssetStoryblok;
  component: "global";
  _uid: string;
  [k: string]: any;
}

export interface GridStoryblok {
  cols: number | string;
  colsMd?: number | string;
  colsLg?: number | string;
  colsXl?: number | string;
  items: (CardLightStoryblok | ItemStoryblok)[];
  spaceX: number | string;
  spaceXSm?: number | string;
  spaceXMd?: number | string;
  spaceXLg?: number | string;
  spaceY: number | string;
  spaceYSm?: number | string;
  spaceYMd?: number | string;
  spaceYLg?: number | string;
  tag: "" | "div" | "ul";
  maxWidth?: number | string;
  component: "grid";
  _uid: string;
  [k: string]: any;
}

export interface HeroHomeStoryblok {
  component: "heroHome";
  _uid: string;
  [k: string]: any;
}

export interface HeroHorizontalStoryblok {
  badge?: string;
  title: string;
  text: string;
  buttons?: ButtonStoryblok[];
  component: "heroHorizontal";
  _uid: string;
  [k: string]: any;
}

export interface HeroVerticalStoryblok {
  badge?: string;
  title: string;
  text: string;
  buttons?: ButtonStoryblok[];
  component: "heroVertical";
  _uid: string;
  [k: string]: any;
}

export interface ItemStoryblok {
  icon: AssetStoryblok;
  title: string;
  text: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "item";
  _uid: string;
  [k: string]: any;
}

export interface LastArticlesStoryblok {
  category?: ISbStoryData<BlogCategoryStoryblok> | string;
  component: "lastArticles";
  _uid: string;
  [k: string]: any;
}

export interface PageStoryblok {
  metaTitle: string;
  body: (
    | CallToActionStoryblok
    | DefinitionHomeStoryblok
    | SectionStoryblok
    | SectionHorizontalStoryblok
    | SectionVerticalStoryblok
    | HeroHomeStoryblok
    | HeroHorizontalStoryblok
    | HeroVerticalStoryblok
  )[];
  metaDescription: string;
  ogBadge: string;
  ogTitle: string;
  component: "page";
  _uid: string;
  [k: string]: any;
}

export interface SectionStoryblok {
  blocks?: (
    | AccordionStoryblok
    | AccordionGroupStoryblok
    | ArticleStoryblok
    | BlogCategoryStoryblok
    | ButtonStoryblok
    | ButtonGroupStoryblok
    | CallToActionStoryblok
    | CodeBlockStoryblok
    | DefinitionStoryblok
    | DefinitionHomeStoryblok
    | FooterAgencyStoryblok
    | FooterLinkStoryblok
    | FooterLinkGroupStoryblok
    | GlobalStoryblok
    | GridStoryblok
    | HeroHomeStoryblok
    | HeroHorizontalStoryblok
    | HeroVerticalStoryblok
    | ItemStoryblok
    | LastArticlesStoryblok
    | PageStoryblok
    | SectionStoryblok
    | SectionHorizontalStoryblok
    | SectionVerticalStoryblok
    | SpacerStoryblok
    | TechnologyStoryblok
    | TestimonialStoryblok
    | WorkStoryblok
  )[];
  backgroundColor: number | string;
  component: "section";
  _uid: string;
  [k: string]: any;
}

export interface SectionHorizontalStoryblok {
  backgroundColor: number | string;
  badge: string;
  title: string;
  text?: RichtextStoryblok;
  leftItems?: GridStoryblok[];
  rightItems?: (
    | AccordionStoryblok
    | AccordionGroupStoryblok
    | ArticleStoryblok
    | BlogCategoryStoryblok
    | ButtonStoryblok
    | ButtonGroupStoryblok
    | CallToActionStoryblok
    | CodeBlockStoryblok
    | DefinitionStoryblok
    | DefinitionHomeStoryblok
    | FooterAgencyStoryblok
    | FooterLinkStoryblok
    | FooterLinkGroupStoryblok
    | GlobalStoryblok
    | GridStoryblok
    | HeroHomeStoryblok
    | HeroHorizontalStoryblok
    | HeroVerticalStoryblok
    | ItemStoryblok
    | LastArticlesStoryblok
    | PageStoryblok
    | SectionStoryblok
    | SectionHorizontalStoryblok
    | SectionVerticalStoryblok
    | SpacerStoryblok
    | TechnologyStoryblok
    | TestimonialStoryblok
    | WorkStoryblok
  )[];
  revertSide?: boolean;
  bottomItems?: (
    | AccordionStoryblok
    | AccordionGroupStoryblok
    | ArticleStoryblok
    | BlogCategoryStoryblok
    | ButtonStoryblok
    | ButtonGroupStoryblok
    | CallToActionStoryblok
    | CodeBlockStoryblok
    | DefinitionStoryblok
    | DefinitionHomeStoryblok
    | FooterAgencyStoryblok
    | FooterLinkStoryblok
    | FooterLinkGroupStoryblok
    | GlobalStoryblok
    | GridStoryblok
    | HeroHomeStoryblok
    | HeroHorizontalStoryblok
    | HeroVerticalStoryblok
    | ItemStoryblok
    | LastArticlesStoryblok
    | PageStoryblok
    | SectionStoryblok
    | SectionHorizontalStoryblok
    | SectionVerticalStoryblok
    | SpacerStoryblok
    | TechnologyStoryblok
    | TestimonialStoryblok
    | WorkStoryblok
  )[];
  sizeLeftColumn: "" | "half" | "third";
  component: "sectionHorizontal";
  _uid: string;
  [k: string]: any;
}

export interface SectionVerticalStoryblok {
  backgroundColor: number | string;
  titleMaxWidth: number | string;
  textMaxWidth: number | string;
  isCentered?: boolean;
  style: "" | "centered" | "justified" | "shared";
  badge: string;
  title: string;
  text?: RichtextStoryblok;
  items?: (
    | PageInlineRichtextStoryblok
    | ButtonGroupStoryblok
    | AccordionGroupStoryblok
    | SpacerStoryblok
    | LastArticlesStoryblok
    | ContactStoryblok
  )[];
  blocks?: (
    | AccordionStoryblok
    | AccordionGroupStoryblok
    | ArticleStoryblok
    | BlogCategoryStoryblok
    | ButtonStoryblok
    | ButtonGroupStoryblok
    | CallToActionStoryblok
    | CodeBlockStoryblok
    | DefinitionStoryblok
    | DefinitionHomeStoryblok
    | FooterAgencyStoryblok
    | FooterLinkStoryblok
    | FooterLinkGroupStoryblok
    | GlobalStoryblok
    | GridStoryblok
    | HeroHomeStoryblok
    | HeroHorizontalStoryblok
    | HeroVerticalStoryblok
    | ItemStoryblok
    | LastArticlesStoryblok
    | PageStoryblok
    | SectionStoryblok
    | SectionHorizontalStoryblok
    | SectionVerticalStoryblok
    | SpacerStoryblok
    | TechnologyStoryblok
    | TestimonialStoryblok
    | WorkStoryblok
  )[];
  component: "sectionVertical";
  _uid: string;
  [k: string]: any;
}

export interface SpacerStoryblok {
  space: number | string;
  smSpace: number | string;
  mdSpace: number | string;
  lgSpace: number | string;
  component: "spacer";
  _uid: string;
  [k: string]: any;
}

export interface TechnologyStoryblok {
  logoFull: AssetStoryblok;
  metaTitle: string;
  metaDescription: string;
  ogBadge: string;
  ogTitle: string;
  logoOutline: AssetStoryblok;
  component: "technology";
  _uid: string;
  [k: string]: any;
}

export interface TestimonialStoryblok {
  companyName: string;
  companyLogo: AssetStoryblok;
  firstname: string;
  lastname: string;
  position: string;
  content: string;
  component: "testimonial";
  _uid: string;
  [k: string]: any;
}

export interface WorkStoryblok {
  metaTitle: string;
  metaDescription: string;
  ogBadge: string;
  ogTitle: string;
  component: "work";
  _uid: string;
  [k: string]: any;
}
