// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from "storyblok";
export interface RichtextStoryblok {
  type: string;
  content?: RichtextStoryblok[];
  marks?: RichtextStoryblok[];
  attrs?: any;
  text?: string;
  [k: string]: any;
}

export interface AccordionStoryblok {
  title: string;
  text: RichtextStoryblok;
  component: "accordion";
  _uid: string;
  [k: string]: any;
}

export interface AccordionGroupStoryblok {
  maxWidth: number | string;
  accordions: AccordionStoryblok[];
  component: "accordionGroup";
  _uid: string;
  [k: string]: any;
}

export interface AgencyNoteStoryblok {
  component: "agencyNote";
  _uid: string;
  [k: string]: any;
}

export interface AssetStoryblok {
  alt: string | null;
  copyright?: string | null;
  fieldtype: "asset";
  id: number;
  filename: string | null;
  name: string;
  title: string | null;
  focus: string | null;
  meta_data?: {
    [k: string]: any;
  };
  source?: string | null;
  is_external_url?: boolean;
  is_private?: boolean;
  src?: string;
  updated_at?: string;
  width?: number | null;
  height?: number | null;
  aspect_ratio?: number | null;
  public_id?: string | null;
  content_type?: string;
  [k: string]: any;
}

export interface ArticleStoryblok {
  author: (ISbStoryData<TeamStoryblok> | string)[];
  category: (ISbStoryData<BlogCategoryStoryblok> | string)[];
  cover: AssetStoryblok;
  description: string;
  content: RichtextStoryblok;
  metaTitle: string;
  metaDescription: string;
  ogBadge: string;
  ogTitle: string;
  ogDescription?: string;
  component: "article";
  _uid: string;
  [k: string]: any;
}

export interface BlogCategoryStoryblok {
  body: (
    | HeroHomeStoryblok
    | HeroHorizontalStoryblok
    | HeroVerticalStoryblok
    | BlogHomeStoryblok
    | CallToActionStoryblok
    | ContactHomeStoryblok
    | DefinitionHomeStoryblok
    | SectionStoryblok
    | SectionHorizontalStoryblok
    | SectionVerticalStoryblok
    | TechnologyHomeStoryblok
    | WorkHomeStoryblok
    | AccordionGroupStoryblok
    | AgencyNoteStoryblok
    | ButtonGroupStoryblok
    | ContactWidgetStoryblok
    | FeaturedWorksStoryblok
    | GridStoryblok
    | ImageStoryblok
    | LatestArticlesStoryblok
    | MarqueeLogosStoryblok
    | SpacerStoryblok
  )[];
  metaTitle: string;
  metaDescription: string;
  ogBadge: string;
  OgTitle: string;
  ogDescription?: string;
  component: "blogCategory";
  _uid: string;
  [k: string]: any;
}

export interface BlogHomeStoryblok {
  component: "blogHome";
  _uid: string;
  [k: string]: any;
}

export type MultilinkStoryblok =
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      anchor?: string;
      rel?: string;
      title?: string;
      prep?: string;
      linktype: "story";
      story?: {
        name: string;
        created_at?: string;
        published_at?: string;
        id: number;
        uuid: string;
        content?: {
          [k: string]: any;
        };
        slug: string;
        full_slug: string;
        sort_by_date?: null | string;
        position?: number;
        tag_list?: string[];
        is_startpage?: boolean;
        parent_id?: null | number;
        meta_data?: null | {
          [k: string]: any;
        };
        group_id?: string;
        first_published_at?: string;
        release_id?: null | number;
        lang?: string;
        path?: null | string;
        alternates?: any[];
        default_full_slug?: null | string;
        translated_slugs?: null | any[];
        [k: string]: any;
      };
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "url";
      rel?: string;
      title?: string;
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      email?: string;
      linktype: "email";
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "asset";
      [k: string]: any;
    };

export interface ButtonStoryblok {
  title: string;
  link: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  style: "" | "blackFull" | "blackLink" | "blueFull" | "grayFull" | "whiteFull" | "whiteLink";
  isArrowShowed?: boolean;
  component: "button";
  _uid: string;
  [k: string]: any;
}

export interface ButtonGroupStoryblok {
  items: (ButtonStoryblok | ButtonMeetingStoryblok)[];
  component: "buttonGroup";
  _uid: string;
  [k: string]: any;
}

export interface ButtonMeetingStoryblok {
  title: string;
  style: "" | "blackFull" | "blackLink" | "blueFull" | "grayFull" | "whiteFull" | "whiteLink";
  isArrowShowed?: boolean;
  component: "buttonMeeting";
  _uid: string;
  [k: string]: any;
}

export interface CallToActionStoryblok {
  badge: string;
  title: string;
  content: string;
  buttons: ButtonStoryblok[];
  component: "callToAction";
  _uid: string;
  [k: string]: any;
}

export interface CardBentoStoryblok {
  title: string;
  text: string;
  illustration?: (
    | AccordionStoryblok
    | AccordionGroupStoryblok
    | AgencyNoteStoryblok
    | ArticleStoryblok
    | BlogCategoryStoryblok
    | BlogHomeStoryblok
    | ButtonStoryblok
    | ButtonGroupStoryblok
    | ButtonMeetingStoryblok
    | CallToActionStoryblok
    | CardBentoStoryblok
    | CardIconTitleTextFullStoryblok
    | CardIconTitleTextLightStoryblok
    | CardIconTitleTextNormalStoryblok
    | CardImageTitleTextStoryblok
    | CodeBlockStoryblok
    | CompanyStoryblok
    | ContactHomeStoryblok
    | ContactWidgetStoryblok
    | CustomerStoryblok
    | DefinitionStoryblok
    | DefinitionHomeStoryblok
    | FeaturedTechnologiesStoryblok
    | FeaturedWorksStoryblok
    | FooterAgencyStoryblok
    | FooterLinkStoryblok
    | FooterLinkGroupStoryblok
    | GlobalStoryblok
    | GridStoryblok
    | HeroHomeStoryblok
    | HeroHorizontalStoryblok
    | HeroVerticalStoryblok
    | HighlightWordsStoryblok
    | ImageStoryblok
    | LatestArticlesStoryblok
    | MarqueeLogosStoryblok
    | NavbarColumnStoryblok
    | NavbarDropdownStoryblok
    | NavbarLinkStoryblok
    | NavbarSubDropdownStoryblok
    | PageStoryblok
    | SectionStoryblok
    | SectionHorizontalStoryblok
    | SectionVerticalStoryblok
    | SpacerStoryblok
    | TeamStoryblok
    | TechnologyStoryblok
    | TechnologyCategoryStoryblok
    | TechnologyHomeStoryblok
    | TestimonialStoryblok
    | TextStoryblok
    | WorkStoryblok
    | WorkCategoryStoryblok
    | WorkHomeStoryblok
  )[];
  isTextOnTop?: boolean;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  colSpanMd?: "" | "1" | "2";
  rowSpanMd?: "" | "1" | "2";
  rowSpanLg?: "" | "1" | "2";
  colSpanLg?: "" | "1" | "2";
  component: "cardBento";
  _uid: string;
  [k: string]: any;
}

export interface CardIconTitleTextFullStoryblok {
  icon: AssetStoryblok;
  title: string;
  text: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "cardIconTitleTextFull";
  _uid: string;
  [k: string]: any;
}

export interface CardIconTitleTextLightStoryblok {
  icon: AssetStoryblok;
  title: string;
  text: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  isInline?: boolean;
  component: "cardIconTitleTextLight";
  _uid: string;
  [k: string]: any;
}

export interface CardIconTitleTextNormalStoryblok {
  icon: AssetStoryblok;
  title: string;
  text: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "cardIconTitleTextNormal";
  _uid: string;
  [k: string]: any;
}

export interface CardImageTitleTextStoryblok {
  image: AssetStoryblok;
  title: string;
  text: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "cardImageTitleText";
  _uid: string;
  [k: string]: any;
}

export interface CodeBlockStoryblok {
  component: "codeBlock";
  _uid: string;
  [k: string]: any;
}

export interface CompanyStoryblok {
  name: string;
  logoFull: AssetStoryblok;
  logoWhite: AssetStoryblok;
  component: "company";
  _uid: string;
  [k: string]: any;
}

export interface ContactHomeStoryblok {
  component: "contactHome";
  _uid: string;
  [k: string]: any;
}

export interface ContactWidgetStoryblok {
  component: "contactWidget";
  _uid: string;
  [k: string]: any;
}

export interface CustomerStoryblok {
  name: string;
  customerSince: string;
  description: string;
  logoFull: AssetStoryblok;
  logoWhite: AssetStoryblok;
  component: "customer";
  _uid: string;
  [k: string]: any;
}

export interface DefinitionStoryblok {
  metaTitle: string;
  metaDescription: string;
  ogBadge: string;
  ogTitle: string;
  author: (ISbStoryData<TeamStoryblok> | string)[];
  content: RichtextStoryblok;
  ogDescription?: string;
  component: "definition";
  _uid: string;
  [k: string]: any;
}

export interface DefinitionHomeStoryblok {
  component: "definitionHome";
  _uid: string;
  [k: string]: any;
}

export interface FeaturedTechnologiesStoryblok {
  technologies: (ISbStoryData<TechnologyStoryblok> | string)[];
  component: "featuredTechnologies";
  _uid: string;
  [k: string]: any;
}

export interface FeaturedWorksStoryblok {
  works?: (ISbStoryData<WorkStoryblok> | string)[];
  component: "featuredWorks";
  _uid: string;
  [k: string]: any;
}

export interface FooterAgencyStoryblok {
  city: string;
  adressOne: string;
  adresseTwo?: string;
  component: "footerAgency";
  _uid: string;
  [k: string]: any;
}

export interface FooterLinkStoryblok {
  title: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "footerLink";
  _uid: string;
  [k: string]: any;
}

export interface FooterLinkGroupStoryblok {
  title: string;
  items: FooterLinkStoryblok[];
  component: "footerLinkGroup";
  _uid: string;
  [k: string]: any;
}

export interface GlobalStoryblok {
  navbar: (NavbarLinkStoryblok | NavbarDropdownStoryblok)[];
  footerAgencies: FooterAgencyStoryblok[];
  footerColumns: FooterLinkGroupStoryblok[];
  footerLinks: FooterLinkStoryblok[];
  logoDark: AssetStoryblok;
  logoLight: AssetStoryblok;
  component: "global";
  _uid: string;
  [k: string]: any;
}

export interface GridStoryblok {
  cols: number | string;
  colsMd?: number | string;
  colsLg?: number | string;
  colsXl?: number | string;
  items: any[];
  spaceX: number | string;
  spaceXSm?: number | string;
  spaceXMd?: number | string;
  spaceXLg?: number | string;
  spaceY: number | string;
  spaceYSm?: number | string;
  spaceYMd?: number | string;
  spaceYLg?: number | string;
  tag: "" | "div" | "ul";
  rows?: number | string;
  maxWidth?: number | string;
  rowsMd?: number | string;
  rowsLg?: number | string;
  component: "grid";
  _uid: string;
  [k: string]: any;
}

export interface HeroHomeStoryblok {
  component: "heroHome";
  _uid: string;
  [k: string]: any;
}

export interface HeroHorizontalStoryblok {
  badge?: string;
  title: string;
  text: string;
  buttons?: ButtonStoryblok[];
  effects?: HighlightWordsStoryblok[];
  component: "heroHorizontal";
  _uid: string;
  [k: string]: any;
}

export interface HeroVerticalStoryblok {
  badge?: string;
  title: string;
  text?: string;
  buttons?: ButtonStoryblok[];
  component: "heroVertical";
  _uid: string;
  [k: string]: any;
}

export interface HighlightWordsStoryblok {
  component: "highlightWords";
  _uid: string;
  [k: string]: any;
}

export interface ImageStoryblok {
  image: AssetStoryblok;
  component: "image";
  _uid: string;
  [k: string]: any;
}

export interface LatestArticlesStoryblok {
  category?: ISbStoryData<BlogCategoryStoryblok> | string;
  component: "latestArticles";
  _uid: string;
  [k: string]: any;
}

export interface MarqueeLogosStoryblok {
  backgroundColor: number | string;
  logoColors: "" | "original" | "white" | "dark";
  companies: (ISbStoryData<CompanyStoryblok> | ISbStoryData<CustomerStoryblok> | string)[];
  component: "marqueeLogos";
  _uid: string;
  [k: string]: any;
}

export interface NavbarColumnStoryblok {
  title?: string;
  links: NavbarLinkStoryblok[];
  component: "navbarColumn";
  _uid: string;
  [k: string]: any;
}

export interface NavbarDropdownStoryblok {
  title: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  items: (NavbarLinkStoryblok | NavbarColumnStoryblok | NavbarSubDropdownStoryblok)[];
  component: "navbarDropdown";
  _uid: string;
  [k: string]: any;
}

export interface NavbarLinkStoryblok {
  icon?: AssetStoryblok;
  title: string;
  link: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "navbarLink";
  _uid: string;
  [k: string]: any;
}

export interface NavbarSubDropdownStoryblok {
  title?: string;
  items: (NavbarColumnStoryblok | NavbarLinkStoryblok)[];
  component: "navbarSubDropdown";
  _uid: string;
  [k: string]: any;
}

export interface PageStoryblok {
  metaTitle: string;
  body: (
    | HeroHomeStoryblok
    | HeroHorizontalStoryblok
    | HeroVerticalStoryblok
    | BlogHomeStoryblok
    | CallToActionStoryblok
    | ContactHomeStoryblok
    | DefinitionHomeStoryblok
    | SectionStoryblok
    | SectionHorizontalStoryblok
    | SectionVerticalStoryblok
    | TechnologyHomeStoryblok
    | WorkHomeStoryblok
  )[];
  metaDescription: string;
  ogBadge: string;
  ogTitle: string;
  ogDescription?: string;
  component: "page";
  _uid: string;
  [k: string]: any;
}

export interface SectionStoryblok {
  blocks?: (
    | AccordionGroupStoryblok
    | AgencyNoteStoryblok
    | ButtonGroupStoryblok
    | ContactWidgetStoryblok
    | FeaturedWorksStoryblok
    | GridStoryblok
    | ImageStoryblok
    | LatestArticlesStoryblok
    | MarqueeLogosStoryblok
    | SpacerStoryblok
  )[];
  backgroundColor: number | string;
  component: "section";
  _uid: string;
  [k: string]: any;
}

export interface SectionHorizontalStoryblok {
  backgroundColor: number | string;
  badge: string;
  title: string;
  text?: RichtextStoryblok;
  leftItems?: (
    | AccordionGroupStoryblok
    | AgencyNoteStoryblok
    | ButtonGroupStoryblok
    | ContactWidgetStoryblok
    | FeaturedWorksStoryblok
    | GridStoryblok
    | ImageStoryblok
    | LatestArticlesStoryblok
    | MarqueeLogosStoryblok
    | SpacerStoryblok
  )[];
  rightItems?: (
    | AccordionGroupStoryblok
    | AgencyNoteStoryblok
    | ButtonGroupStoryblok
    | ContactWidgetStoryblok
    | FeaturedWorksStoryblok
    | GridStoryblok
    | ImageStoryblok
    | LatestArticlesStoryblok
    | MarqueeLogosStoryblok
    | SpacerStoryblok
  )[];
  revertSide?: boolean;
  bottomItems?: (
    | AccordionGroupStoryblok
    | AgencyNoteStoryblok
    | ButtonGroupStoryblok
    | ContactWidgetStoryblok
    | FeaturedWorksStoryblok
    | GridStoryblok
    | ImageStoryblok
    | LatestArticlesStoryblok
    | MarqueeLogosStoryblok
    | SpacerStoryblok
  )[];
  sizeLeftColumn: "" | "half" | "third";
  component: "sectionHorizontal";
  _uid: string;
  [k: string]: any;
}

export interface SectionVerticalStoryblok {
  backgroundColor: number | string;
  titleMaxWidth: number | string;
  textMaxWidth: number | string;
  style: "" | "centered" | "justified" | "shared";
  badge: string;
  title: string;
  text?: RichtextStoryblok;
  blocks?: (
    | AccordionGroupStoryblok
    | AgencyNoteStoryblok
    | ButtonGroupStoryblok
    | ContactWidgetStoryblok
    | FeaturedWorksStoryblok
    | GridStoryblok
    | ImageStoryblok
    | LatestArticlesStoryblok
    | MarqueeLogosStoryblok
    | SpacerStoryblok
  )[];
  component: "sectionVertical";
  _uid: string;
  [k: string]: any;
}

export interface SpacerStoryblok {
  space: number | string;
  smSpace: number | string;
  mdSpace: number | string;
  lgSpace: number | string;
  component: "spacer";
  _uid: string;
  [k: string]: any;
}

export interface TeamStoryblok {
  picture?: AssetStoryblok;
  firstname: string;
  lastname: string;
  position: string;
  email: string;
  linkedin?: string;
  calendar?: string;
  component: "team";
  _uid: string;
  [k: string]: any;
}

export interface TechnologyStoryblok {
  generatePage?: boolean;
  logoOutline: AssetStoryblok;
  logoFullDark: AssetStoryblok;
  logoFullLight: AssetStoryblok;
  metaTitle: string;
  metaDescription: string;
  ogBadge: string;
  ogTitle: string;
  ogDescription?: string;
  body: (
    | HeroHomeStoryblok
    | HeroHorizontalStoryblok
    | HeroVerticalStoryblok
    | BlogHomeStoryblok
    | CallToActionStoryblok
    | ContactHomeStoryblok
    | DefinitionHomeStoryblok
    | SectionStoryblok
    | SectionHorizontalStoryblok
    | SectionVerticalStoryblok
    | TechnologyHomeStoryblok
    | WorkHomeStoryblok
    | AccordionGroupStoryblok
    | AgencyNoteStoryblok
    | ButtonGroupStoryblok
    | ContactWidgetStoryblok
    | FeaturedWorksStoryblok
    | GridStoryblok
    | ImageStoryblok
    | LatestArticlesStoryblok
    | MarqueeLogosStoryblok
    | SpacerStoryblok
  )[];
  component: "technology";
  _uid: string;
  [k: string]: any;
}

export interface TechnologyCategoryStoryblok {
  component: "technologyCategory";
  _uid: string;
  [k: string]: any;
}

export interface TechnologyHomeStoryblok {
  component: "technologyHome";
  _uid: string;
  [k: string]: any;
}

export interface TestimonialStoryblok {
  companyName: string;
  companyLogo: AssetStoryblok;
  firstname: string;
  lastname: string;
  position: string;
  content: string;
  component: "testimonial";
  _uid: string;
  [k: string]: any;
}

export interface TextStoryblok {
  content: RichtextStoryblok;
  component: "text";
  _uid: string;
  [k: string]: any;
}

export interface WorkStoryblok {
  customer: (ISbStoryData<CustomerStoryblok> | string)[];
  category: (ISbStoryData<WorkCategoryStoryblok> | string)[];
  services: (string)[];
  technologies: (ISbStoryData<TechnologyStoryblok> | string)[];
  project: string;
  cover: AssetStoryblok;
  completionYear: string;
  content?: RichtextStoryblok;
  metaTitle: string;
  metaDescription: string;
  ogBadge: string;
  ogTitle: string;
  ogDescription?: string;
  component: "work";
  _uid: string;
  [k: string]: any;
}

export interface WorkCategoryStoryblok {
  body: WorkHomeStoryblok[];
  metaTitle: string;
  metaDescription: string;
  ogBadge: string;
  OgTitle: string;
  ogDescription?: string;
  component: "workCategory";
  _uid: string;
  [k: string]: any;
}

export interface WorkHomeStoryblok {
  component: "workHome";
  _uid: string;
  [k: string]: any;
}
