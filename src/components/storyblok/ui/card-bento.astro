---
// import SvgDistant from '@/components/svg-distant.astro';
// import { cn } from '@/lib/utils';
import { cn } from '@/lib/utils';
import type { CardBentoStoryblok } from '@/types/storyblok';
import { parseStoryblokLink } from '@/utils/storyblok';
import { storyblokEditable } from '@storyblok/astro';

interface AstroProps {
  blok: CardBentoStoryblok;
}

const { blok } = Astro.props as AstroProps;

const colSpanMd = {
  '1': 'md:col-span-1',
  '2': 'md:col-span-2',
};

const rowSpanMd = {
  '1': 'md:row-span-1',
  '2': 'md:row-span-2',
};

const colSpanLg = {
  '1': 'lg:col-span-1',
  '2': 'lg:col-span-2',
};

const rowSpanLg = {
  '1': 'lg:row-span-1',
  '2': 'lg:row-span-2',
};

const TitleWrapper = !!parseStoryblokLink(blok.link) ? 'a' : 'span';
---

<!-- TITLE -->
<div
  {...storyblokEditable(blok)}
  class={cn(
    'group isolate flex flex-col overflow-hidden rounded-2xl bg-white shadow-[0_1px_1px_rgba(0,0,0,0.05),0_4px_6px_rgba(34,42,53,0.04),0_24px_68px_rgba(47,48,55,0.05),0_2px_3px_rgba(0,0,0,0.04)] dark:bg-gray-900 dark:shadow-[inset_0_1px,inset_0_0_0_1px] dark:shadow-white/[0.05]',
    colSpanMd[blok.colSpanMd as keyof typeof colSpanMd],
    rowSpanMd[blok.rowSpanMd as keyof typeof rowSpanMd],
    colSpanLg[blok.colSpanLg as keyof typeof colSpanLg],
    rowSpanLg[blok.rowSpanLg as keyof typeof rowSpanLg]
  )}
>
  <div class={cn('relative z-10 flex-none px-6', blok.isTextOnTop ? 'pt-6' : 'order-last pb-6')}>
    <h4 class="text-sm font-medium text-gray-950 dark:text-white">{blok.title}</h4>
    <p class="mt-2 text-sm/5 text-pretty text-gray-600 dark:text-gray-400">
      {blok.text}
    </p>
  </div>
  <div
    class="pointer-events-none relative flex-auto select-none"
    aria-hidden="true"
    style="min-height: 10.25rem;"
  >
    <div class="isolate flex h-full items-center justify-center">
      <div class="relative">
        <div class="flex gap-3"></div>
      </div>
    </div>
  </div>
</div>
