---
import Richtext from '@/components/richtext.astro';
import { cn } from '@/lib/utils';
import type { SectionVerticalStoryblok } from '@/types/storyblok';
import { parseStoryblokBackgroundColor, parseStoryblokMaxWidth } from '@/utils/storyblok';
import { storyblokEditable } from '@storyblok/astro';
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro';

interface AstroProps {
  blok: SectionVerticalStoryblok;
}

const { blok } = Astro.props as AstroProps;
---

<section
  {...storyblokEditable(blok)}
  class:list={parseStoryblokBackgroundColor(blok.backgroundColor)}
>
  <div class="container py-20 sm:py-32">
    <h2
      {...blok.sectionId && { id: blok.sectionId }}
      class:list={cn(
        'text-2xs/[1.5] overflow-hidden font-mono font-medium tracking-wider text-gray-600 uppercase dark:text-gray-200',
        blok.style === 'centered' ? 'text-center' : 'text-left'
      )}
    >
      {blok.badge}
    </h2>
    <div class:list={cn('mt-4', blok.style === 'shared' && 'lg:grid lg:grid-cols-2 lg:gap-x-12')}>
      <h3
        class:list={cn(
          'font-heading text-3xl font-medium tracking-tight text-balance text-gray-950 dark:text-white',
          blok.style === 'centered' ? 'text-center' : 'text-left',
          blok.style === 'centered' && parseStoryblokMaxWidth(blok.titleMaxWidth) + ' mx-auto',
          blok.style === 'justified' && 'max-w-2xl',
          blok.style === 'shared' && 'text-pretty'
        )}
      >
        {blok.title}
      </h3>
      {
        blok.text?.content?.[0]?.content && (
          <Richtext
            text={blok.text}
            class={cn(
              'mt-4 space-y-4 text-base/5 text-gray-600 dark:text-gray-400',
              blok.style === 'centered' ? 'text-center' : 'text-left',
              blok.style === 'centered' && parseStoryblokMaxWidth(blok.textMaxWidth) + ' mx-auto',
              blok.style === 'justified' && 'max-w-xl text-pretty',
              blok.style === 'shared' && 'mt-4 flex-auto text-pretty lg:mt-0'
            )}
          />
        )
      }
    </div>
    {
      blok.blocks && (
        <div class="mt-16">
          {blok.blocks?.map((block) => (
            <StoryblokComponent blok={block} />
          ))}
        </div>
      )
    }
  </div>
</section>
