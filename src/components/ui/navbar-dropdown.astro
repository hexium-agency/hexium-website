---
import type { NavbarDropdownStoryblok } from '@/types/storyblok';
import { storyblokEditable } from '@storyblok/astro';
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro';
import { map } from 'astro:schema';

interface AstroProps {
  blok: NavbarDropdownStoryblok;
}

const { blok } = Astro.props as AstroProps;

const shouldFlexHorizontally = blok.items.every((item) => item.component === 'navbarColumn');

const containsOnlySubDropdowns = blok.items.every((item) => item.component === 'navbarSubDropdown');

const subDropdownItems = blok.items.filter((item) => item.component === 'navbarSubDropdown');

---

<div {...storyblokEditable(blok)} class="relative group">
  <h2 class="font-bold">{blok.title}</h2>
  <div class="absolute left-0 top-full mt-2 bg-white rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50 flex gap-4">
    <div class={`p-8 flex gap-6 ${shouldFlexHorizontally ? 'flex-row' : 'flex-col'}`}>
      {blok.items.map((link) => <StoryblokComponent blok={link} />)}
    </div>

    {subDropdownItems.map(item => <div class="p-8 gap-6 hidden" data-subdropdown={item.title}>
        {item.items.map((link) => <StoryblokComponent blok={link} />)}
    </div>)}
  </div>
</div>
