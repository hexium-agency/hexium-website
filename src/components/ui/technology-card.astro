---
import type { TechnologyPlaceholderStoryblok, TechnologyStoryblok } from '@/types/storyblok';
import { parseStoryblokImage } from '@/utils/storyblok';
import type { ISbStoryData } from '@storyblok/astro';
import { Image } from 'astro:assets';

type TechnologyUnion = TechnologyPlaceholderStoryblok | TechnologyStoryblok;

interface AstroProps {
  technology: ISbStoryData<TechnologyUnion>;
}

const { technology } = Astro.props as AstroProps;

const logo = technology.content.logoFullLight || technology.content.logoFullDark;

const hasPage = technology.content.component === 'technology';
const pageUrl = hasPage ? `/technologies/${technology.slug}` : null;

const TitleWrapper = hasPage ? 'a' : 'span';
---

<div
  class={`group relative h-full rounded-lg p-6 shadow-[0_1px_5px_-4px_rgba(19,19,22,0.7),0_4px_8px_rgba(32,42,54,0.05)] ring-1 ring-gray-900/7.5 transition-shadow ${
    hasPage
      ? 'hover:shadow-[0_1px_7px_-4px_rgba(19,19,22,0.8),0_4px_11px_rgba(32,42,54,0.05)] hover:ring-gray-900/12.5 cursor-pointer'
      : ''
  } dark:bg-gray-900`}
>
  <div
    class="pointer-events-none absolute inset-1.5 rounded-sm border border-gray-50 opacity-0 transition-opacity group-hover:opacity-100 dark:border-white/5"
  >
  </div>

  {
    logo && (
      <div
        aria-hidden="true"
        class="mb-4 text-gray-400 transition group-hover:text-gray-950 dark:text-gray-500 dark:group-hover:text-gray-300 [&>img]:h-8 [&>img]:w-auto"
      >
        <Image
          sizes="32px"
          class="h-8 w-auto object-contain"
          style="color: transparent;"
          {...parseStoryblokImage(logo)}
          alt={`${technology.name} logo`}
        />
      </div>
    )
  }

  <div>
    <h4 class="mb-2 text-[0.875rem]/5 font-medium text-gray-950 dark:text-white">
      <TitleWrapper
        class="inline-flex items-center justify-center"
        {...hasPage ? { href: pageUrl } : {}}
      >
        {technology.name}
        {
          hasPage && (
            <>
              <svg
                viewBox="0 0 10 10"
                aria-hidden="true"
                class="before:transtion-opacity ml-2 h-2.5 w-2.5 flex-none opacity-60 transition duration-300 ease-[cubic-bezier(0.4,0.36,0,1)] group-hover:translate-x-6 group-hover:opacity-0 before:duration-300 before:ease-[cubic-bezier(0.4,0.36,0,1)]"
              >
                <path
                  fill="currentColor"
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="1.5"
                  d="m7.25 5-3.5-2.25v4.5L7.25 5Z"
                />
              </svg>
              <svg
                viewBox="0 0 10 10"
                aria-hidden="true"
                class="before:transtion-opacity -ml-2.5 h-2.5 w-2.5 flex-none -translate-x-2 opacity-0 transition duration-300 ease-[cubic-bezier(0.4,0.36,0,1)] group-hover:translate-x-0 group-hover:opacity-100 before:duration-300 before:ease-[cubic-bezier(0.4,0.36,0,1)]"
              >
                <path
                  fill="currentColor"
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="1.5"
                  d="m7.25 5-3.5-2.25v4.5L7.25 5Z"
                />
              </svg>
            </>
          )
        }
        <span class="absolute inset-0"></span>
      </TitleWrapper>
    </h4>

    {
      technology.content.description && (
        <div class="text-[0.875rem]/5 text-gray-600 dark:text-gray-400">
          <p>{technology.content.description}</p>
        </div>
      )
    }
  </div>
</div>
