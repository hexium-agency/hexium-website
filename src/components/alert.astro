---
interface Props {
  type: 'success' | 'danger';
  title?: string;
  message?: string;
}

const { type, title, message } = Astro.props;

const styles = {
  success: {
    container: 'bg-green-50',
    icon: 'text-green-400',
    title: 'text-green-800',
    message: 'text-green-700',
    button: 'bg-green-50 text-green-800 hover:bg-green-100 focus:ring-green-600 focus:ring-offset-green-50'
  },
  danger: {
    container: 'bg-red-50',
    icon: 'text-red-400',
    title: 'text-red-800',
    message: 'text-red-700',
    button: 'bg-red-50 text-red-800 hover:bg-red-100 focus:ring-red-600 focus:ring-offset-red-50'
  }
};

const currentStyle = styles[type];
---

<div class={`rounded-md ${currentStyle.container} p-4`}>
  <div class="flex">
    <div class="shrink-0">
      {type === 'success' && (
        <svg class={`size-5 ${currentStyle.icon}`} viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
          <path fill-rule="evenodd" d="M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16Zm3.857-9.809a.75.75 0 0 0-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 1 0-1.06 1.061l2.5 2.5a.75.75 0 0 0 1.137-.089l4-5.5Z" clip-rule="evenodd" />
        </svg>
      )}
      {type === 'danger' && (
        <svg class={`size-5 ${currentStyle.icon}`} viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
          <path fill-rule="evenodd" d="M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16ZM8.28 7.22a.75.75 0 0 0-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 1 0 1.06 1.06L10 11.06l1.72 1.72a.75.75 0 1 0 1.06-1.06L11.06 10l1.72-1.72a.75.75 0 0 0-1.06-1.06L10 8.94 8.28 7.22Z" clip-rule="evenodd" />
        </svg>
      )}
    </div>
    <div class="ml-3">
      {title && <h3 class={`text-sm font-medium ${currentStyle.title}`}>{title}</h3>}
      
      {message && (
        <div class={`mt-1 text-sm ${currentStyle.message}`}>
          <p>{message}</p>
        </div>
      )}
    </div>
  </div>
</div> 
